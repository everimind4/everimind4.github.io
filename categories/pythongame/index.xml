<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PythonGame on Alan Choi</title>
    <link>https://everimind4.github.io/categories/pythongame/</link>
    <description>Recent content in PythonGame on Alan Choi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://everimind4.github.io/categories/pythongame/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>제어문 (1)</title>
      <link>https://everimind4.github.io/p/%EC%A0%9C%EC%96%B4%EB%AC%B8-1/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://everimind4.github.io/p/%EC%A0%9C%EC%96%B4%EB%AC%B8-1/</guid>
      <description>1. 들여쓰기(Indentation)  C에서는 코드 실행 단위인 블록을 구분하기 위해 중괄호{ }를 사용하고, 들여쓰기는 가독성을 증진시키는 데만 사용되는 개념이었다.
하지만 파이썬에서는 들여쓰기 수준으로 코드 블록을 구분한다.
 C/C++ Style if (조건문) { 명령1; 명령2; } Python Style if a &amp;gt; b: 명령1 명령2 C와 비교했을 때, Python의 문법적 차이는 다음와 같다.
 조건문을 괄호( )로 싸지 않고 콜론:을 조건문 뒤에 적는 것으로 간단하게 사용한다. 명령문의 끝에 세미콜론;을 적지 않는다. (적어도 상관은 없음) 코드 블록을 감싸는 중괄호{ }를 생략한다.</description>
    </item>
    
    <item>
      <title>데이터형과 데이터 구조 (3)</title>
      <link>https://everimind4.github.io/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%98%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-3/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://everimind4.github.io/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%98%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-3/</guid>
      <description>7. 관련 함수들 len 리스트나 튜플 내의 요소 개수를 반환하는 함수이다.
&amp;gt;&amp;gt;&amp;gt; len([&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;]) 4 &amp;gt;&amp;gt;&amp;gt; len([2, 3, 5, 7, 11, 13]) 6 대상 요소가 무엇이든 전체 개수만 반환하므로, 2차원 이상의 리스트 혹은 튜플의 경우에는 다음과 같은 결과를 확인할 수 있다.
&amp;gt;&amp;gt;&amp;gt; fibonacci = [[1, 1, 2, 3, 5, 8], [13, 21, 34, 55, 89], [144, 233, 377, 610, 987]] &amp;gt;&amp;gt;&amp;gt; len(fibonacci) 3 &amp;gt;&amp;gt;&amp;gt; len(fibonacci[2]) 5 copy 리스트를 복제하는 (리스트) 메소드이다.</description>
    </item>
    
    <item>
      <title>데이터형과 데이터 구조 (2)</title>
      <link>https://everimind4.github.io/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%98%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-2/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://everimind4.github.io/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%98%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-2/</guid>
      <description>4. 데이터형 파이썬의 기본적인 데이터형은 다음과 같다.
   종류 예약어 상세 예시     정수 int 소수점이 없음 4, 2, 6   실수 float 소수점이 있음 3.14, 2.71   문자열(String) str 문자열의 나열 &#39;everimind4&#39;   부울(Boolean) bool 논리값을 저장 True, False    1. 숫자 숫자를 저장하기 위한 변수는 다른 언어들과 마찬가지로 2종류가 있다.
 정수형 : 정수 값을 저장, 소수점이 없다. 실수형 : 실수 값을 저장, 소수점이 있고, 부동소수형이라고도 한다.</description>
    </item>
    
    <item>
      <title>데이터형과 데이터 구조 (1)</title>
      <link>https://everimind4.github.io/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%98%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-1/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://everimind4.github.io/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%98%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-1/</guid>
      <description>1. 연산 1.1 기본 연산자 코딩을 조금이라도 공부해 본 사람은 알겠지만, 파이썬에서는 여타 수많은 프로그래밍 언어와 마찬가지로 다양한 연산자를 지원하고 있다.
    수학에서의 기호 파이썬에서의 기호     덧셈 + +   뺄셈 - -   곱셈 × *   나눗셈 ÷ /     주의할 점은, 자료형(정수형, 실수형, &amp;hellip;)에 따라 계산 방식이 조금씩 다를 수 있다는 것이다.  또, Python IDLE Shell에서는 파이썬 코드를 입력하면 실행 결과가 바로 출력되는 것을 볼 수 있다.</description>
    </item>
    
    <item>
      <title>시작하기</title>
      <link>https://everimind4.github.io/p/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://everimind4.github.io/p/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</guid>
      <description>교재 소개  파이썬을 공부하고자 좋은 교재가 없는지 찾아보다, 기초 문법도 학습할 수 있고 개인 프로젝트도 직접 만들어 볼 수 있는 교재를 발견하였다. 바로 게임으로 배우는 파이썬!   본 교재는 1부와 2부로 구성되어 있다.  1부에서는 파이썬의 기초 문법에 대해 학습 2부에서는 학습한 내용을 기초로 하여 직접 고전 게임을 만들어보는 프로젝트를 진행   따라서 해당 교재를 공부한 내용과 프로젝트를 수행한 결과물을 본 블로그 및 Github Repository에 업로드 할 예정이다!</description>
    </item>
    
  </channel>
</rss>
